from core.command_router import route_command
from core.semantic_cleaner import semantic_clean_via_llm
from utils.helpers import clean_text, contains_exit_command
from utils.constants import EXIT_COMMANDS
from llm.emotion_classifier import classify_emotion
from output.text_output import print_response
# from output.speech_output import speak
from core.memory import add_message

def process_input(user_text: str) -> bool:
    cleaned = clean_text(user_text)

    if not cleaned or cleaned == None:
        print("ü§∑ –Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ –≤—ã —Å–∫–∞–∑–∞–ª–∏.")
        return

    if contains_exit_command(cleaned, EXIT_COMMANDS):
        # speak("–î–æ –≤—Å—Ç—Ä–µ—á–∏!")
        print("üö™ –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É.")
        return 

    emotion = classify_emotion(cleaned)
    print(f"üß† –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —ç–º–æ—Ü–∏—è: {emotion}")

    add_message(role="user", content=cleaned)

    semantic = semantic_clean_via_llm(cleaned)
    print(f"üßπ –û—á–∏—â–µ–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: {semantic}")

    response = route_command(semantic)

    add_message(role="bot", content=response)

    return response
